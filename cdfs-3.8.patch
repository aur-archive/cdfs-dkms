diff -upr cdfs-2.6.27.orig/daemon.c cdfs-2.6.27/daemon.c
--- cdfs-2.6.27.orig/daemon.c	2009-12-21 16:02:50.000000000 +0200
+++ cdfs-2.6.27/daemon.c	2013-02-21 06:14:45.000000000 +0200
@@ -158,7 +158,6 @@ int kcdfsd_thread(void *unused){
   exit_files(current);  /* daemonize doesn't do exit_files */
   daemonize();
 #else
-  daemonize("k"FSNAME"d");
 
   /* Allow SIGTERM to quit properly when removing module */
   /* By default with daemonize all signals are dropped */
diff -upr cdfs-2.6.27.orig/root.c cdfs-2.6.27/root.c
--- cdfs-2.6.27.orig/root.c	2009-12-21 15:38:31.000000000 +0200
+++ cdfs-2.6.27/root.c	2013-02-21 06:15:20.000000000 +0200
@@ -25,6 +25,7 @@
 #include "cdfs.h"
 
 #include <linux/module.h>
+#include <linux/kthread.h>
 
 
 /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
@@ -643,14 +644,15 @@ static int __init cdfs_init(void) {
   cdfs_proc_cd=NULL;
 
   // start kernel thread
-  if ((kcdfsd_pid = kernel_thread(kcdfsd_thread, NULL, CLONE_FS | CLONE_FILES | CLONE_SIGHAND)) >0 ) {
-    return 0;
-  } else {
-    printk(FSNAME" kernel_thread failed.\n");
+  kcdfsd_pid = kthread_run(kcdfsd_thread, NULL, "kcdfsd_thread");
+  if (IS_ERR(kcdfsd_pid)) {
+    printk(FSNAME" kthread_run failed.\n");
     if (cdfs_proc_entry) remove_proc_entry(FSNAME, NULL);
     unregister_filesystem(&cdfs_fs_type);
     return -1;
   }
+
+  return 0;
 }
 
 /******************************************************************/
